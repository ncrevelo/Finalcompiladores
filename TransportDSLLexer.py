# Generated from TransportDSL.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,143,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,
        3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,
        8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,
        11,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,5,
        16,117,8,16,10,16,12,16,120,9,16,1,16,1,16,1,17,4,17,125,8,17,11,
        17,12,17,126,1,17,1,17,4,17,131,8,17,11,17,12,17,132,3,17,135,8,
        17,1,18,4,18,138,8,18,11,18,12,18,139,1,18,1,18,0,0,19,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,35,18,37,19,1,0,3,3,0,10,10,13,13,34,34,1,0,48,57,3,
        0,9,10,13,13,32,32,147,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
        0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
        0,0,0,1,39,1,0,0,0,3,44,1,0,0,0,5,46,1,0,0,0,7,53,1,0,0,0,9,60,1,
        0,0,0,11,64,1,0,0,0,13,74,1,0,0,0,15,80,1,0,0,0,17,86,1,0,0,0,19,
        90,1,0,0,0,21,98,1,0,0,0,23,101,1,0,0,0,25,104,1,0,0,0,27,106,1,
        0,0,0,29,108,1,0,0,0,31,111,1,0,0,0,33,114,1,0,0,0,35,124,1,0,0,
        0,37,137,1,0,0,0,39,40,5,108,0,0,40,41,5,111,0,0,41,42,5,97,0,0,
        42,43,5,100,0,0,43,2,1,0,0,0,44,45,5,59,0,0,45,4,1,0,0,0,46,47,5,
        102,0,0,47,48,5,105,0,0,48,49,5,108,0,0,49,50,5,116,0,0,50,51,5,
        101,0,0,51,52,5,114,0,0,52,6,1,0,0,0,53,54,5,99,0,0,54,55,5,111,
        0,0,55,56,5,108,0,0,56,57,5,117,0,0,57,58,5,109,0,0,58,59,5,110,
        0,0,59,8,1,0,0,0,60,61,5,65,0,0,61,62,5,78,0,0,62,63,5,68,0,0,63,
        10,1,0,0,0,64,65,5,97,0,0,65,66,5,103,0,0,66,67,5,103,0,0,67,68,
        5,114,0,0,68,69,5,101,0,0,69,70,5,103,0,0,70,71,5,97,0,0,71,72,5,
        116,0,0,72,73,5,101,0,0,73,12,1,0,0,0,74,75,5,112,0,0,75,76,5,114,
        0,0,76,77,5,105,0,0,77,78,5,110,0,0,78,79,5,116,0,0,79,14,1,0,0,
        0,80,81,5,99,0,0,81,82,5,111,0,0,82,83,5,117,0,0,83,84,5,110,0,0,
        84,85,5,116,0,0,85,16,1,0,0,0,86,87,5,115,0,0,87,88,5,117,0,0,88,
        89,5,109,0,0,89,18,1,0,0,0,90,91,5,97,0,0,91,92,5,118,0,0,92,93,
        5,101,0,0,93,94,5,114,0,0,94,95,5,97,0,0,95,96,5,103,0,0,96,97,5,
        101,0,0,97,20,1,0,0,0,98,99,5,62,0,0,99,100,5,61,0,0,100,22,1,0,
        0,0,101,102,5,60,0,0,102,103,5,61,0,0,103,24,1,0,0,0,104,105,5,62,
        0,0,105,26,1,0,0,0,106,107,5,60,0,0,107,28,1,0,0,0,108,109,5,61,
        0,0,109,110,5,61,0,0,110,30,1,0,0,0,111,112,5,33,0,0,112,113,5,61,
        0,0,113,32,1,0,0,0,114,118,5,34,0,0,115,117,8,0,0,0,116,115,1,0,
        0,0,117,120,1,0,0,0,118,116,1,0,0,0,118,119,1,0,0,0,119,121,1,0,
        0,0,120,118,1,0,0,0,121,122,5,34,0,0,122,34,1,0,0,0,123,125,7,1,
        0,0,124,123,1,0,0,0,125,126,1,0,0,0,126,124,1,0,0,0,126,127,1,0,
        0,0,127,134,1,0,0,0,128,130,5,46,0,0,129,131,7,1,0,0,130,129,1,0,
        0,0,131,132,1,0,0,0,132,130,1,0,0,0,132,133,1,0,0,0,133,135,1,0,
        0,0,134,128,1,0,0,0,134,135,1,0,0,0,135,36,1,0,0,0,136,138,7,2,0,
        0,137,136,1,0,0,0,138,139,1,0,0,0,139,137,1,0,0,0,139,140,1,0,0,
        0,140,141,1,0,0,0,141,142,6,18,0,0,142,38,1,0,0,0,6,0,118,126,132,
        134,139,1,6,0,0
    ]

class TransportDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    STRING = 17
    NUMBER = 18
    WS = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'load'", "';'", "'filter'", "'column'", "'AND'", "'aggregate'", 
            "'print'", "'count'", "'sum'", "'average'", "'>='", "'<='", 
            "'>'", "'<'", "'=='", "'!='" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "NUMBER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "STRING", "NUMBER", "WS" ]

    grammarFileName = "TransportDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


